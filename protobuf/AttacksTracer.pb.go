// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: protobuf/AttacksTracer.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShowNetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShowNetRequest) Reset() {
	*x = ShowNetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowNetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowNetRequest) ProtoMessage() {}

func (x *ShowNetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowNetRequest.ProtoReflect.Descriptor instead.
func (*ShowNetRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{0}
}

type WholeNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"` //  repeated Node isolatedNodes = 2;
}

func (x *WholeNetwork) Reset() {
	*x = WholeNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WholeNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WholeNetwork) ProtoMessage() {}

func (x *WholeNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WholeNetwork.ProtoReflect.Descriptor instead.
func (*WholeNetwork) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{1}
}

func (x *WholeNetwork) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

type Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NetworkName string  `protobuf:"bytes,2,opt,name=networkName,proto3" json:"networkName,omitempty"`
	Address     string  `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	SubnetMask  int32   `protobuf:"varint,4,opt,name=subnetMask,proto3" json:"subnetMask,omitempty"`
	Nodes       []*Node `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *Network) Reset() {
	*x = Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{2}
}

func (x *Network) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Network) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

func (x *Network) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Network) GetSubnetMask() int32 {
	if x != nil {
		return x.SubnetMask
	}
	return 0
}

func (x *Network) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Connections  []*Connection  `protobuf:"bytes,3,rep,name=connections,proto3" json:"connections,omitempty"`
	Applications []*Application `protobuf:"bytes,4,rep,name=applications,proto3" json:"applications,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{3}
}

func (x *Node) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetConnections() []*Connection {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *Node) GetApplications() []*Application {
	if x != nil {
		return x.Applications
	}
	return nil
}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	SubnetMask int32  `protobuf:"varint,2,opt,name=subnetMask,proto3" json:"subnetMask,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{4}
}

func (x *Connection) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Connection) GetSubnetMask() int32 {
	if x != nil {
		return x.SubnetMask
	}
	return 0
}

type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{5}
}

func (x *Application) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AddNodeRequest) Reset() {
	*x = AddNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeRequest) ProtoMessage() {}

func (x *AddNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeRequest.ProtoReflect.Descriptor instead.
func (*AddNodeRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{6}
}

func (x *AddNodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateNodeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateNodeInfoRequest) Reset() {
	*x = UpdateNodeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeInfoRequest) ProtoMessage() {}

func (x *UpdateNodeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeInfoRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNodeInfoRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AddNetworkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address    string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	SubnetMask int32  `protobuf:"varint,3,opt,name=subnetMask,proto3" json:"subnetMask,omitempty"`
}

func (x *AddNetworkRequest) Reset() {
	*x = AddNetworkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNetworkRequest) ProtoMessage() {}

func (x *AddNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNetworkRequest.ProtoReflect.Descriptor instead.
func (*AddNetworkRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{8}
}

func (x *AddNetworkRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddNetworkRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddNetworkRequest) GetSubnetMask() int32 {
	if x != nil {
		return x.SubnetMask
	}
	return 0
}

type AddApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodeID int32  `protobuf:"varint,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
}

func (x *AddApplicationRequest) Reset() {
	*x = AddApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddApplicationRequest) ProtoMessage() {}

func (x *AddApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddApplicationRequest.ProtoReflect.Descriptor instead.
func (*AddApplicationRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{9}
}

func (x *AddApplicationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddApplicationRequest) GetNodeID() int32 {
	if x != nil {
		return x.NodeID
	}
	return 0
}

type MakeConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID     int32  `protobuf:"varint,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	NetworkID  int32  `protobuf:"varint,2,opt,name=networkID,proto3" json:"networkID,omitempty"`
	Address    string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	SubnetMask int32  `protobuf:"varint,4,opt,name=subnetMask,proto3" json:"subnetMask,omitempty"`
}

func (x *MakeConnectionRequest) Reset() {
	*x = MakeConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeConnectionRequest) ProtoMessage() {}

func (x *MakeConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeConnectionRequest.ProtoReflect.Descriptor instead.
func (*MakeConnectionRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{10}
}

func (x *MakeConnectionRequest) GetNodeID() int32 {
	if x != nil {
		return x.NodeID
	}
	return 0
}

func (x *MakeConnectionRequest) GetNetworkID() int32 {
	if x != nil {
		return x.NetworkID
	}
	return 0
}

func (x *MakeConnectionRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MakeConnectionRequest) GetSubnetMask() int32 {
	if x != nil {
		return x.SubnetMask
	}
	return 0
}

type InfectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID      int32  `protobuf:"varint,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	MalwareName string `protobuf:"bytes,2,opt,name=malwareName,proto3" json:"malwareName,omitempty"`
	CcsAddress  string `protobuf:"bytes,3,opt,name=ccsAddress,proto3" json:"ccsAddress,omitempty"`
}

func (x *InfectRequest) Reset() {
	*x = InfectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfectRequest) ProtoMessage() {}

func (x *InfectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfectRequest.ProtoReflect.Descriptor instead.
func (*InfectRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{11}
}

func (x *InfectRequest) GetNodeID() int32 {
	if x != nil {
		return x.NodeID
	}
	return 0
}

func (x *InfectRequest) GetMalwareName() string {
	if x != nil {
		return x.MalwareName
	}
	return ""
}

func (x *InfectRequest) GetCcsAddress() string {
	if x != nil {
		return x.CcsAddress
	}
	return ""
}

type AddRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID     int32  `protobuf:"varint,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	DstAddress string `protobuf:"bytes,2,opt,name=dstAddress,proto3" json:"dstAddress,omitempty"`
	Mask       int32  `protobuf:"varint,3,opt,name=mask,proto3" json:"mask,omitempty"`
	Nexthop    string `protobuf:"bytes,4,opt,name=nexthop,proto3" json:"nexthop,omitempty"`
	NetID      int32  `protobuf:"varint,5,opt,name=netID,proto3" json:"netID,omitempty"`
}

func (x *AddRouteRequest) Reset() {
	*x = AddRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRouteRequest) ProtoMessage() {}

func (x *AddRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRouteRequest.ProtoReflect.Descriptor instead.
func (*AddRouteRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{12}
}

func (x *AddRouteRequest) GetNodeID() int32 {
	if x != nil {
		return x.NodeID
	}
	return 0
}

func (x *AddRouteRequest) GetDstAddress() string {
	if x != nil {
		return x.DstAddress
	}
	return ""
}

func (x *AddRouteRequest) GetMask() int32 {
	if x != nil {
		return x.Mask
	}
	return 0
}

func (x *AddRouteRequest) GetNexthop() string {
	if x != nil {
		return x.Nexthop
	}
	return ""
}

func (x *AddRouteRequest) GetNetID() int32 {
	if x != nil {
		return x.NetID
	}
	return 0
}

type AddRouteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddRouteReply) Reset() {
	*x = AddRouteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRouteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRouteReply) ProtoMessage() {}

func (x *AddRouteReply) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRouteReply.ProtoReflect.Descriptor instead.
func (*AddRouteReply) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{13}
}

type SendPacketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID      int32  `protobuf:"varint,1,opt,name=appID,proto3" json:"appID,omitempty"`
	SrcAddress string `protobuf:"bytes,2,opt,name=srcAddress,proto3" json:"srcAddress,omitempty"`
	SrcPort    int32  `protobuf:"varint,3,opt,name=srcPort,proto3" json:"srcPort,omitempty"`
	DstAddress string `protobuf:"bytes,4,opt,name=dstAddress,proto3" json:"dstAddress,omitempty"`
	DstPort    int32  `protobuf:"varint,5,opt,name=dstPort,proto3" json:"dstPort,omitempty"`
	Data       []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SendPacketRequest) Reset() {
	*x = SendPacketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPacketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPacketRequest) ProtoMessage() {}

func (x *SendPacketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPacketRequest.ProtoReflect.Descriptor instead.
func (*SendPacketRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{14}
}

func (x *SendPacketRequest) GetAppID() int32 {
	if x != nil {
		return x.AppID
	}
	return 0
}

func (x *SendPacketRequest) GetSrcAddress() string {
	if x != nil {
		return x.SrcAddress
	}
	return ""
}

func (x *SendPacketRequest) GetSrcPort() int32 {
	if x != nil {
		return x.SrcPort
	}
	return 0
}

func (x *SendPacketRequest) GetDstAddress() string {
	if x != nil {
		return x.DstAddress
	}
	return ""
}

func (x *SendPacketRequest) GetDstPort() int32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

func (x *SendPacketRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendPacketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendPacketReply) Reset() {
	*x = SendPacketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_AttacksTracer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPacketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPacketReply) ProtoMessage() {}

func (x *SendPacketReply) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_AttacksTracer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPacketReply.ProtoReflect.Descriptor instead.
func (*SendPacketReply) Descriptor() ([]byte, []int) {
	return file_protobuf_AttacksTracer_proto_rawDescGZIP(), []int{15}
}

var File_protobuf_AttacksTracer_proto protoreflect.FileDescriptor

var file_protobuf_AttacksTracer_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x22, 0x10, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x45, 0x0a, 0x0c, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x35, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x07, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73,
	0x6b, 0x12, 0x2c, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22,
	0xad, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x0c,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x46, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x31, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x27, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x11, 0x41, 0x64, 0x64,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x43, 0x0a, 0x15,
	0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x44, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x4d, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x69, 0x0a, 0x0d, 0x49,
	0x6e, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x6c, 0x77, 0x61,
	0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x63, 0x73, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x63, 0x73, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6e, 0x65, 0x74, 0x49, 0x44, 0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb1, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x72, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x72, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x11, 0x0a, 0x0f, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xa1,
	0x05, 0x0a, 0x10, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x2e, 0x6d,
	0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x23, 0x2e,
	0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x00, 0x12,
	0x5a, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x27, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x6c,
	0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0e, 0x4d,
	0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e,
	0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65,
	0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x49, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x2e,
	0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x49, 0x6e, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72,
	0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x6c, 0x77, 0x61,
	0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x42, 0x55, 0x0a, 0x16, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x73, 0x69, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x59, 0x75, 0x79, 0x61, 0x39,
	0x37, 0x38, 0x36, 0x2f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protobuf_AttacksTracer_proto_rawDescOnce sync.Once
	file_protobuf_AttacksTracer_proto_rawDescData = file_protobuf_AttacksTracer_proto_rawDesc
)

func file_protobuf_AttacksTracer_proto_rawDescGZIP() []byte {
	file_protobuf_AttacksTracer_proto_rawDescOnce.Do(func() {
		file_protobuf_AttacksTracer_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_AttacksTracer_proto_rawDescData)
	})
	return file_protobuf_AttacksTracer_proto_rawDescData
}

var file_protobuf_AttacksTracer_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_protobuf_AttacksTracer_proto_goTypes = []interface{}{
	(*ShowNetRequest)(nil),        // 0: malwaresimulator.ShowNetRequest
	(*WholeNetwork)(nil),          // 1: malwaresimulator.WholeNetwork
	(*Network)(nil),               // 2: malwaresimulator.Network
	(*Node)(nil),                  // 3: malwaresimulator.Node
	(*Connection)(nil),            // 4: malwaresimulator.Connection
	(*Application)(nil),           // 5: malwaresimulator.Application
	(*AddNodeRequest)(nil),        // 6: malwaresimulator.AddNodeRequest
	(*UpdateNodeInfoRequest)(nil), // 7: malwaresimulator.UpdateNodeInfoRequest
	(*AddNetworkRequest)(nil),     // 8: malwaresimulator.AddNetworkRequest
	(*AddApplicationRequest)(nil), // 9: malwaresimulator.AddApplicationRequest
	(*MakeConnectionRequest)(nil), // 10: malwaresimulator.MakeConnectionRequest
	(*InfectRequest)(nil),         // 11: malwaresimulator.InfectRequest
	(*AddRouteRequest)(nil),       // 12: malwaresimulator.AddRouteRequest
	(*AddRouteReply)(nil),         // 13: malwaresimulator.AddRouteReply
	(*SendPacketRequest)(nil),     // 14: malwaresimulator.SendPacketRequest
	(*SendPacketReply)(nil),       // 15: malwaresimulator.SendPacketReply
}
var file_protobuf_AttacksTracer_proto_depIdxs = []int32{
	2,  // 0: malwaresimulator.WholeNetwork.networks:type_name -> malwaresimulator.Network
	3,  // 1: malwaresimulator.Network.nodes:type_name -> malwaresimulator.Node
	4,  // 2: malwaresimulator.Node.connections:type_name -> malwaresimulator.Connection
	5,  // 3: malwaresimulator.Node.applications:type_name -> malwaresimulator.Application
	6,  // 4: malwaresimulator.MalwareSimulator.AddNode:input_type -> malwaresimulator.AddNodeRequest
	7,  // 5: malwaresimulator.MalwareSimulator.UpdateNodeInfo:input_type -> malwaresimulator.UpdateNodeInfoRequest
	8,  // 6: malwaresimulator.MalwareSimulator.AddNetwork:input_type -> malwaresimulator.AddNetworkRequest
	9,  // 7: malwaresimulator.MalwareSimulator.AddApplication:input_type -> malwaresimulator.AddApplicationRequest
	10, // 8: malwaresimulator.MalwareSimulator.MakeConnection:input_type -> malwaresimulator.MakeConnectionRequest
	11, // 9: malwaresimulator.MalwareSimulator.Infect:input_type -> malwaresimulator.InfectRequest
	12, // 10: malwaresimulator.MalwareSimulator.AddRoute:input_type -> malwaresimulator.AddRouteRequest
	14, // 11: malwaresimulator.MalwareSimulator.SendPacket:input_type -> malwaresimulator.SendPacketRequest
	3,  // 12: malwaresimulator.MalwareSimulator.AddNode:output_type -> malwaresimulator.Node
	3,  // 13: malwaresimulator.MalwareSimulator.UpdateNodeInfo:output_type -> malwaresimulator.Node
	2,  // 14: malwaresimulator.MalwareSimulator.AddNetwork:output_type -> malwaresimulator.Network
	5,  // 15: malwaresimulator.MalwareSimulator.AddApplication:output_type -> malwaresimulator.Application
	2,  // 16: malwaresimulator.MalwareSimulator.MakeConnection:output_type -> malwaresimulator.Network
	3,  // 17: malwaresimulator.MalwareSimulator.Infect:output_type -> malwaresimulator.Node
	13, // 18: malwaresimulator.MalwareSimulator.AddRoute:output_type -> malwaresimulator.AddRouteReply
	15, // 19: malwaresimulator.MalwareSimulator.SendPacket:output_type -> malwaresimulator.SendPacketReply
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_protobuf_AttacksTracer_proto_init() }
func file_protobuf_AttacksTracer_proto_init() {
	if File_protobuf_AttacksTracer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_AttacksTracer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowNetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WholeNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNetworkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRouteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPacketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_AttacksTracer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPacketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_AttacksTracer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_AttacksTracer_proto_goTypes,
		DependencyIndexes: file_protobuf_AttacksTracer_proto_depIdxs,
		MessageInfos:      file_protobuf_AttacksTracer_proto_msgTypes,
	}.Build()
	File_protobuf_AttacksTracer_proto = out.File
	file_protobuf_AttacksTracer_proto_rawDesc = nil
	file_protobuf_AttacksTracer_proto_goTypes = nil
	file_protobuf_AttacksTracer_proto_depIdxs = nil
}
